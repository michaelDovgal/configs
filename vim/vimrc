set nocompatible

" Automatic reloading of .vimrc on save
autocmd! bufwritepost .vimrc source %

" set words wrapping
set linebreak
" for me just to get used to normal keys,
" disable arrow keys in both mods
" Disable Arrow keys in Escape mode
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
" Disable Arrow keys in Insert mode
imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>

" check which OS we are using - Windows or Linux.
" Probably need to add MacOS
let g:iswindows = 0
let g:islinux = 0
if(has("win32") || has("win64") || has("win95") || has("win16"))
    let g:iswindows = 1
else
    let g:islinux = 1
endif
"

"Vundle "
" before using, vunlde need to be installed
" git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
"
if g:islinux
    set runtimepath+=~/.vim/bundle/Vundle.vim
    call vundle#begin()
else
    set runtimepath+=$vim/vimfiles/bundle/Vundle.vim
    call vundle#begin('$vim/vimfiles/bundle/')
endif

" probably somewhere here I will include color scheme

Plugin 'VundleVim/Vundle.vim'

" here will be list of plugins

Plugin 'scrooloose/nerdtree'        " filetree
Plugin 'https://github.com/vim-scripts/restore_view.vim'
Plugin 'wombat256.vim'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'supertab'
Plugin 'herringtondarkholme/yats.vim'
Plugin 'quramy/tsuquyomi'
call vundle#end()

set cursorcolumn
set cursorline
highlight CursorLine   cterm=NONE ctermbg=black ctermfg=grey guibg=NONE guifg=NONE
highlight CursorColumn cterm=NONE ctermbg=black ctermfg=grey guibg=NONE guifg=NONE
filetype plugin indent on
" show existing tab with 4 spaces width
set tabstop=4
" when indenting with '>', use 4 spaces width
set shiftwidth=4
" On pressing tab, insert 4 spaces
set expandtab

" binding section
" show/hide row number in file
map <silent> <C-N> :set invnumber<CR>

" set hotkey for toogle cursor highlight mode
nnoremap <silent> <F5> :set cursorline! cursorcolumn!<CR>
" NERDTree settings
nnoremap <silent> <F2> :NERDTreeToggle<CR>
" go to previous/next buffer
nnoremap <silent> <F3> :bprevious<CR>
nnoremap <silent> <F4> :bnext<CR>
" set hotkey to close buffer, standard hotkey for a lot of tools
nnoremap <silent> <F10> :bd<CR>

" enable folding
set viewoptions=cursor,folds,slash,unix
let g:skipview_files = ['*\.vim']

" set color scheme
set t_Co=256
color wombat256mod

" easier moving of code blocks
nnoremap <Tab> >>_
nnoremap <S-Tab> <<_
inoremap <S-Tab> <C-D>
vnoremap <Tab> >gv
vnoremap <S-Tab> <gv

" enable airline panel. Probably will disable it after
let g:airline#extensions#tabline#enabled = 1

" Ignore section
" filter *.pyc files
let NERDTreeIgnore = ['\.pyc$']

" special setting to enable typescript syntax highlighting
autocmd BufNewFile,BufRead *.ts set syntax=typescript

" create a new buffer for something
function! ScratchBuffer()
    rightbelow vnew
    setlocal nobuflisted buftype=nofile bufhidden=wipe noswapfile
    return bufnr('%')
endfunction

" need to improve output of grep. add colors
function! ManualGrepSearch()
    let bufnum = ScratchBuffer()
    call inputsave()
    let search_string = input('Input string: ')
    let flags = input('Flags: ')
    execute "r ! grep -r".flags ." ".search_string. " ."
    call inputrestore()
endfunction

function! AutoGrepSearch(search_string)
    let bufnum = ScratchBuffer()
    execute "r ! grep -rnI"." ".a:search_string. " ."
endfunction

nnoremap <F6> :call ManualGrepSearch()<CR>
nnoremap <F7> :call AutoGrepSearch(expand('<cword>'))<CR>

" need to highlight search results
set hls
